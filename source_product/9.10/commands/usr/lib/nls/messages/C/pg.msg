$set 1
1 Usage: pg [-number] [-p string] [-cefns] [+line] [+/pattern/] files\n
4 pg: pattern too long\n
5 pg: prompt too long\n
6 ...skipping backward\n
7 ...skipping forward\n
8 (EOF)
9 cannot open save file
10 saving file 
11 saved
12 cannot fork, try again later
13 exec failed\n
14    h               help\n
15    q or Q          quit\n
16    <blank> or \\n   next page\n
17    l               next line\n
18    d or ^D         display half a page more\n
19    . or ^L         redisplay current page\n
20    f               skip the next page forward\n
21    n               next file\n
22    p               previous file\n
23    $               last page\n
24    w or z          set window size and display next page\n
25    s savefile      save current file in savefile\n
26    /pattern/       search forward for pattern\n
27    ?pattern? or\n
28    ^pattern^       search backward for pattern\n
29    !command         execute command\n
30 Most commands can be preceded by a number, as in:\n
31 +1\\n (next page); -1\\n (previous page); 1\\n (page 1).\n
32 See the manual page for more detail.\n
33 No previous file
34 No next file
35 pg: %s is a directory\n
36 pg: special files only handled as standard input\n
37 pg: Can't create temp file\n
38 pg: Can't get temp file for writing\n
39 pg: Can't get temp file for reading\n
40 Pattern not found
41 Range endpoint too large
42 Bad number
43 `\\digit' out of range
44 Illegal or missing delimeter
45 No remembered search string
46 \\( \\) imbalance
47 Too many \\(
48 More than two numbers given in \\{ \\}
49 } expected after \\
50 First number exceeds second in \\{ \\}
51 [] imbalance
52 Regular expression overflow
53 Bad regular expression
54 Piped input only partially saved
55 pg: no more memory - line %d\n
56 pg: cannot reopen stdout\n
57 pg: cannot find terminal type\n
58 (Next file: 
